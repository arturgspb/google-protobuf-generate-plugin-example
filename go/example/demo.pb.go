// Code generated by protoc-gen-go. DO NOT EDIT.
// source: defs/demo.proto

package example

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Person struct {
	//    int32 id = 1 [(column) = {pk: true}];
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName            string   `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Email                string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Person) Reset()         { *m = Person{} }
func (m *Person) String() string { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()    {}
func (*Person) Descriptor() ([]byte, []int) {
	return fileDescriptor_demo_9a185afefd12be5d, []int{0}
}
func (m *Person) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Person.Unmarshal(m, b)
}
func (m *Person) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Person.Marshal(b, m, deterministic)
}
func (dst *Person) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Person.Merge(dst, src)
}
func (m *Person) XXX_Size() int {
	return xxx_messageInfo_Person.Size(m)
}
func (m *Person) XXX_DiscardUnknown() {
	xxx_messageInfo_Person.DiscardUnknown(m)
}

var xxx_messageInfo_Person proto.InternalMessageInfo

func (m *Person) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Person) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Person) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Person) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type StringMessage struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringMessage) Reset()         { *m = StringMessage{} }
func (m *StringMessage) String() string { return proto.CompactTextString(m) }
func (*StringMessage) ProtoMessage()    {}
func (*StringMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_demo_9a185afefd12be5d, []int{1}
}
func (m *StringMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringMessage.Unmarshal(m, b)
}
func (m *StringMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringMessage.Marshal(b, m, deterministic)
}
func (dst *StringMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringMessage.Merge(dst, src)
}
func (m *StringMessage) XXX_Size() int {
	return xxx_messageInfo_StringMessage.Size(m)
}
func (m *StringMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_StringMessage.DiscardUnknown(m)
}

var xxx_messageInfo_StringMessage proto.InternalMessageInfo

func (m *StringMessage) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*Person)(nil), "example.Person")
	proto.RegisterType((*StringMessage)(nil), "example.StringMessage")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// YourServiceClient is the client API for YourService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type YourServiceClient interface {
	Echo(ctx context.Context, in *StringMessage, opts ...grpc.CallOption) (*StringMessage, error)
}

type yourServiceClient struct {
	cc *grpc.ClientConn
}

func NewYourServiceClient(cc *grpc.ClientConn) YourServiceClient {
	return &yourServiceClient{cc}
}

func (c *yourServiceClient) Echo(ctx context.Context, in *StringMessage, opts ...grpc.CallOption) (*StringMessage, error) {
	out := new(StringMessage)
	err := c.cc.Invoke(ctx, "/example.YourService/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// YourServiceServer is the server API for YourService service.
type YourServiceServer interface {
	Echo(context.Context, *StringMessage) (*StringMessage, error)
}

func RegisterYourServiceServer(s *grpc.Server, srv YourServiceServer) {
	s.RegisterService(&_YourService_serviceDesc, srv)
}

func _YourService_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StringMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YourServiceServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.YourService/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YourServiceServer).Echo(ctx, req.(*StringMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _YourService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "example.YourService",
	HandlerType: (*YourServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _YourService_Echo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "defs/demo.proto",
}

func init() { proto.RegisterFile("defs/demo.proto", fileDescriptor_demo_9a185afefd12be5d) }

var fileDescriptor_demo_9a185afefd12be5d = []byte{
	// 255 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x49, 0x6c, 0xab, 0x19, 0xf1, 0x0f, 0x8b, 0x4a, 0x69, 0x15, 0x4a, 0x40, 0x28, 0x1e,
	0xb2, 0xa8, 0x37, 0x8f, 0x82, 0x47, 0xa5, 0x24, 0x27, 0x4f, 0x32, 0x4d, 0xa6, 0xe9, 0x4a, 0x76,
	0x27, 0xec, 0x6e, 0x83, 0x67, 0x5f, 0xc1, 0x47, 0xf3, 0x15, 0x7c, 0x10, 0x71, 0x53, 0x0f, 0x1e,
	0x3c, 0x7e, 0xdf, 0xef, 0xc7, 0x0c, 0x33, 0x70, 0x54, 0xd1, 0xca, 0xc9, 0x8a, 0x34, 0x67, 0xad,
	0x65, 0xcf, 0x62, 0x97, 0xde, 0x50, 0xb7, 0x0d, 0x4d, 0xce, 0x6b, 0xe6, 0xba, 0x21, 0x89, 0xad,
	0x92, 0x68, 0x0c, 0x7b, 0xf4, 0x8a, 0x8d, 0xeb, 0xb5, 0xf4, 0x15, 0x46, 0x0b, 0xb2, 0x8e, 0x8d,
	0x38, 0x84, 0x58, 0x55, 0xe3, 0x68, 0x16, 0xcd, 0x87, 0x79, 0xac, 0x2a, 0x71, 0x01, 0xb0, 0x52,
	0xd6, 0xf9, 0x17, 0x83, 0x9a, 0xc6, 0xf1, 0x2c, 0x9a, 0x27, 0x79, 0x12, 0x9a, 0x27, 0xd4, 0x24,
	0xa6, 0x90, 0x34, 0xf8, 0x4b, 0x77, 0x02, 0xdd, 0xfb, 0x29, 0x02, 0x3c, 0x81, 0x21, 0x69, 0x54,
	0xcd, 0x78, 0x10, 0x40, 0x1f, 0xd2, 0x4b, 0x38, 0x28, 0xbc, 0x55, 0xa6, 0x7e, 0x24, 0xe7, 0xb0,
	0x0e, 0x5a, 0x87, 0xcd, 0x86, 0xc2, 0xd6, 0x24, 0xef, 0xc3, 0xcd, 0x12, 0xf6, 0x9f, 0x79, 0x63,
	0x0b, 0xb2, 0x9d, 0x2a, 0x49, 0x14, 0x30, 0x78, 0x28, 0xd7, 0x2c, 0xce, 0xb2, 0xed, 0x45, 0xd9,
	0x9f, 0x21, 0x93, 0x7f, 0xfa, 0x74, 0xfa, 0xfe, 0xf9, 0xf5, 0x11, 0x9f, 0xa6, 0xc7, 0xb2, 0xbb,
	0x96, 0x5b, 0x45, 0x52, 0xb9, 0xe6, 0xbb, 0xe8, 0xea, 0x3e, 0x5e, 0x44, 0xcb, 0x51, 0xf8, 0xc0,
	0xed, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x54, 0x5f, 0x3e, 0xf1, 0x3b, 0x01, 0x00, 0x00,
}
